{"version":3,"sources":["components/Note.js","constants/itemTypes.js","components/Editable.js","components/Notes.js","components/Lane.js","actions/lanes.js","constants/actionTypes.js","containers/Lane.js","actions/notes.js","constants/strings.js","components/Lanes.js","containers/App.js","reducers/notes.js","reducers/lanes.js","reducers/index.js","store/configStore.js","index.js","registerServiceWorker.js","components/Lane.module.css","components/Note.module.css","components/Editable.module.css","containers/App.module.css","components/Notes.module.css","components/Lanes.module.css"],"names":["Note","DragSource","beginDrag","props","id","isDragging","monitor","getItem","connect","connectDragSource","dragSource","DropTarget","hover","targetProps","targetId","sourceId","onMoveNote","connectDropTarget","dropTarget","this","onDeleteNote","_this$props","children","react_default","a","createElement","className","styles","noteContainer","note","style","opacity","deleteNote","onClick","handleDelete","Component","autobind","Editable","e","key","handleFinishEdit","value","target","onEdit","trim","onValueClick","_this","input","ref","selectionEnd","length","type","autoFocus","defaultValue","onBlur","onKeyPress","checkEnter","valueContainer","handleValueClick","isEditing","renderEdit","renderValue","Notes","notes","onEditNote","notesList","map","_ref","task","components_Note","components_Editable","laneTarget","lane","notesLength","srcId","srcType","getItemType","onMoveLane","attachToLane","Lane","connectDragPreview","dragPreview","onCreateNote","noteId","onDeleteLane","forEach","allNotes","onEditLane","laneNotes","find","filter","deleteLane","handleDeleteLane","laneHeader","name","addNote","handleCreateNote","components_Notes","handleDeleteNote","laneId","payload","move","state","dispatch","newNote","uuid","v4","LaneActions","updatedNote","NoteActions","Lanes","lanes","containers_Lane","App","topContainer","addLane","onCreateLane","components_Lanes","DragDropContext","HTML5Backend","updatedLane","initialState","defaultState","combineReducers","arguments","undefined","action","concat","Object","toConsumableArray","objectSpread","_action$payload","indexOf","_action$payload2","_action$payload3","sourceLane","targetLane","sourceNoteIndex","targetNoteIndex","update","$splice","_action$payload4","sourceLaneIndex","findIndex","targetLaneIndex","configStore","createStore","rootReducer","localStore","localforage","createInstance","then","val","err","console","log","store","ReactDOM","render","es","containers_App","document","getElementById","subscribe","throttle","setItem","getState","navigator","window","addEventListener","swUrl","process","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","module","exports"],"mappings":"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","file":"static/js/main.b7a0ed41.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport autobind from 'autobind-decorator'\nimport { DragSource, DropTarget } from 'react-dnd'\nimport * as itemTypes from '../constants/itemTypes'\nimport styles from './Note.module.css'\n\nconst noteSource = {\n  beginDrag(props) {\n    return {\n      id: props.id\n    }\n  },\n  isDragging(props, monitor) {\n    return props.id === monitor.getItem().id\n  }\n}\n\nconst noteTarget = {\n  hover(targetProps, monitor) {\n    const targetId = targetProps.id\n    const sourceProps = monitor.getItem()\n    const sourceId = sourceProps.id\n\n    if (sourceId !== targetId) {\n      targetProps.onMoveNote(sourceId, targetId)\n    }\n  }\n}\n\n@DragSource(itemTypes.NOTE, noteSource, (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  isDragging: monitor.isDragging()\n}))\n@DropTarget(itemTypes.NOTE, noteTarget, (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget()\n}))\nclass Note extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    connectDragSource: PropTypes.func.isRequired,\n    connectDropTarget: PropTypes.func.isRequired,\n    isDragging: PropTypes.bool,\n    onMoveNote: PropTypes.func.isRequired,\n    onDeleteNote: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired\n  }\n\n  @autobind\n  handleDelete() {\n    this.props.onDeleteNote(this.props.id)\n  }\n\n  render() {\n    const {\n      connectDragSource,\n      connectDropTarget,\n      isDragging,\n      children\n    } = this.props\n\n    return connectDragSource(\n      connectDropTarget(\n        <div className={styles.noteContainer}>\n          <li className={styles.note} style={{ opacity: isDragging ? 0 : 1 }}>\n            {children}\n          </li>\n          <button className={styles.deleteNote} onClick={this.handleDelete} />\n        </div>\n      )\n    )\n  }\n}\n\nexport default Note\n","export const NOTE = 'NOTE';\nexport const LANE = 'LANE';","import React, { Component } from 'react'\nimport autobind from 'autobind-decorator'\nimport PropTypes from 'prop-types'\nimport styles from './Editable.module.css'\n\nclass Editable extends Component {\n  static propTypes = {\n    isEditing: PropTypes.bool,\n    id: PropTypes.string.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    onValueClick: PropTypes.func.isRequired,\n    value: PropTypes.string.isRequired\n  }\n\n  @autobind\n  checkEnter(e) {\n    if (e.key === 'Enter') {\n      this.handleFinishEdit(e)\n    }\n  }\n\n  @autobind\n  handleFinishEdit(e) {\n    const value = e.target.value\n\n    if (this.props.onEdit && value.trim()) {\n      this.props.onEdit(this.props.id, value)\n    }\n  }\n\n  @autobind\n  handleValueClick() {\n    this.props.onValueClick(this.props.id)\n  }\n\n  renderEdit() {\n    return (\n      <input\n        className={styles.input}\n        ref={e => (e ? (e.selectionEnd = this.props.value.length) : null)}\n        type=\"text\"\n        autoFocus={true}\n        defaultValue={this.props.value}\n        onBlur={this.handleFinishEdit}\n        onKeyPress={this.checkEnter}\n      />\n    )\n  }\n\n  renderValue() {\n    return (\n      <div className={styles.valueContainer} onClick={this.handleValueClick}>\n        <span>{this.props.value}</span>\n      </div>\n    )\n  }\n\n  render() {\n    const { isEditing } = this.props\n    return <div>{isEditing ? this.renderEdit() : this.renderValue()}</div>\n  }\n}\n\nexport default Editable\n","import React, { Component } from 'react'\nimport Note from './Note'\nimport Editable from './Editable'\nimport PropTypes from 'prop-types'\nimport styles from './Notes.module.css'\n\nclass Notes extends Component {\n  static propTypes = {\n    notes: PropTypes.array.isRequired,\n    onDeleteNote: PropTypes.func.isRequired,\n    onEditNote: PropTypes.func.isRequired,\n    onMoveNote: PropTypes.func.isRequired,\n    onValueClick: PropTypes.func.isRequired\n  }\n\n  render() {\n    const {\n      notes,\n      onValueClick,\n      onEditNote,\n      onDeleteNote,\n      onMoveNote\n    } = this.props\n\n    return (\n      <ul className={styles.notesList}>\n        {notes.map(({ id, task, isEditing }) => (\n          <Note\n            key={id}\n            id={id}\n            onDeleteNote={onDeleteNote}\n            onMoveNote={onMoveNote}\n          >\n            <Editable\n              isEditing={isEditing}\n              id={id}\n              value={task}\n              onValueClick={onValueClick}\n              onEdit={onEditNote}\n            />\n          </Note>\n        ))}\n      </ul>\n    )\n  }\n}\n\nexport default Notes\n","import React, { Component } from 'react'\nimport Notes from './Notes'\nimport Editable from './Editable'\nimport autobind from 'autobind-decorator'\nimport { DragSource } from 'react-dnd'\nimport { DropTarget } from 'react-dnd'\nimport * as itemTypes from '../constants/itemTypes'\nimport PropTypes from 'prop-types'\nimport styles from './Lane.module.css'\n\nconst laneSource = {\n  beginDrag(props) {\n    return {\n      id: props.lane.id\n    }\n  },\n  isDragging(props, monitor) {\n    return props.id === monitor.getItem().id\n  }\n}\n\nconst laneTarget = {\n  hover(targetProps, monitor) {\n    const targetId = targetProps.lane.id\n    const notesLength = targetProps.lane.notes.length\n    const srcProps = monitor.getItem()\n    const srcId = srcProps.id\n    const srcType = monitor.getItemType()\n\n    if (!notesLength && srcType === itemTypes.NOTE) {\n      targetProps.attachToLane(targetId, srcId)\n    } else if (targetId !== srcId && srcType === itemTypes.LANE) {\n      targetProps.onMoveLane(srcId, targetId)\n    }\n  }\n}\n\n@DragSource(itemTypes.LANE, laneSource, (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  connectDragPreview: connect.dragPreview(),\n  isDragging: monitor.isDragging()\n}))\n@DropTarget([itemTypes.NOTE, itemTypes.LANE], laneTarget, connect => ({\n  connectDropTarget: connect.dropTarget()\n}))\nclass Lane extends Component {\n  static propTypes = {\n    lane: PropTypes.object.isRequired,\n    allNotes: PropTypes.array.isRequired,\n    connectDragSource: PropTypes.func.isRequired,\n    connectDropTarget: PropTypes.func.isRequired,\n    connectDragPreview: PropTypes.func.isRequired,\n    onCreateNote: PropTypes.func.isRequired,\n    onEditNote: PropTypes.func.isRequired,\n    onEditLane: PropTypes.func.isRequired,\n    onDeleteNote: PropTypes.func.isRequired,\n    onMoveNote: PropTypes.func.isRequired\n  }\n\n  @autobind\n  handleCreateNote() {\n    this.props.onCreateNote(this.props.lane.id)\n  }\n\n  @autobind\n  handleDeleteNote(noteId) {\n    this.props.onDeleteNote(this.props.lane.id, noteId)\n  }\n\n  @autobind\n  handleDeleteLane() {\n    const lane = this.props.lane\n\n    this.props.onDeleteLane(lane.id)\n    lane.notes.forEach(noteId => this.props.onDeleteLane(null, noteId))\n  }\n\n  render() {\n    const {\n      lane,\n      allNotes,\n      onEditLane,\n      onEditNote,\n      onMoveNote,\n      connectDragSource,\n      connectDropTarget\n    } = this.props\n\n    const laneNotes = lane.notes\n      .map(id => allNotes.find(note => note.id === id))\n      .filter(note => note)\n    return connectDragSource(\n      connectDropTarget(\n        <div className={styles.lane}>\n          <button\n            className={styles.deleteLane}\n            onClick={this.handleDeleteLane}\n          />\n\n          <h2 className={styles.laneHeader}>\n            <Editable\n              id={lane.id}\n              isEditing={lane.isEditing}\n              value={lane.name}\n              onEdit={onEditLane}\n              onValueClick={onEditLane}\n            />\n          </h2>\n          <button className={styles.addNote} onClick={this.handleCreateNote}>\n            +\n          </button>\n          <Notes\n            notes={laneNotes}\n            onValueClick={onEditNote}\n            onEditNote={onEditNote}\n            onDeleteNote={this.handleDeleteNote}\n            onMoveNote={onMoveNote}\n          />\n        </div>\n      )\n    )\n  }\n}\n\nexport default Lane\n","import uuid from 'uuid';\nimport * as actionTypes from '../constants/actionTypes';\n\nexport const createLane = name => {\n  return {\n    type: actionTypes.CREATE_LANE,\n    payload: {\n      id: uuid.v4(),\n      name,\n      notes: [],\n      isEditing: true\n    }\n  };\n};\n\nexport const updateLane = updatedLane => {\n  return {\n    type: actionTypes.UPDATE_LANE,\n    payload: updatedLane\n  };\n};\n\nexport const deleteLane = id => {\n  return {\n    type: actionTypes.DELETE_LANE,\n    payload: {\n      id\n    }\n  };\n};\n\nexport const attachToLane = (laneId, noteId) => {\n  return {\n    type: actionTypes.ATTACH_TO_LANE,\n    payload: {\n      laneId,\n      noteId\n    }\n  };\n};\n\nexport const detachFromLane = (laneId, noteId) => {\n  return {\n    type: actionTypes.DETACH_FROM_LANE,\n    payload: {\n      laneId,\n      noteId\n    }\n  };\n};\n\nexport const move = (target, sourceId, targetId) => {\n  return {\n    type: target === 'note' ? actionTypes.MOVE_NOTE : actionTypes.MOVE_LANE,\n    payload: {\n      sourceId,\n      targetId\n    }\n  };\n};","//Lanes actions\nexport const CREATE_LANE = 'CREATE_LANE';\nexport const UPDATE_LANE = 'UPDATE_LANE';\nexport const DELETE_LANE = 'DELETE_LANE';\nexport const ATTACH_TO_LANE = 'ATTACH_TO_LANE';\nexport const DETACH_FROM_LANE = 'DETACH_FROM_LANE';\nexport const MOVE_LANE = 'MOVE_LANE';\n\n//Notes actions\nexport const CREATE_NOTE = 'CREATE_NOTE';\nexport const UPDATE_NOTE = 'UPDATE_NOTE';\nexport const DELETE_NOTE = 'DELETE_NOTE';\nexport const MOVE_NOTE = 'MOVE_NOTE';\n","import Lane from '../components/Lane';\nimport * as LaneActions from '../actions/lanes';\nimport * as NoteActions from '../actions/notes';\nimport * as Strings from '../constants/strings';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => ({\n  allNotes: state.notes\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onCreateNote(laneId) {\n    const newNote = NoteActions.createNote(Strings.NEW_TASK);\n\n    dispatch(newNote);\n    dispatch(LaneActions.attachToLane(laneId, newNote.payload.id));\n  },\n  onDeleteNote(laneId, noteId) {\n    dispatch(NoteActions.deleteNote(noteId));\n\n    if (laneId) {\n      dispatch(LaneActions.detachFromLane(laneId, noteId));\n    }\n  },\n  onEditNote(noteId, value) {\n    const updatedNote = {\n      id: noteId\n    };\n\n    if (value) {\n      updatedNote.task = value;\n      updatedNote.isEditing = false;\n    } else {\n      updatedNote.isEditing = true;\n    }\n    dispatch(NoteActions.updateNote(updatedNote));\n  },\n  onMoveNote(sourceId, targetId) {\n    dispatch(LaneActions.move('note', sourceId, targetId));\n  },\n  attachToLane(laneId, noteId) {\n    dispatch(LaneActions.attachToLane(laneId, noteId));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Lane);\n","import uuid from 'uuid';\nimport * as actionTypes from '../constants/actionTypes';\n\nexport const createNote = task => {\n  return {\n    type: actionTypes.CREATE_NOTE,\n    payload: {\n      id: uuid.v4(),\n      isEditing: true,\n      task\n    }\n  };\n};\n\nexport const updateNote = updatedNote => {\n  return {\n    type: actionTypes.UPDATE_NOTE,\n    payload: updatedNote\n  };\n};\n\nexport const deleteNote = id => {\n  return {\n    type: actionTypes.DELETE_NOTE,\n    payload: id\n  };\n};\n","export const NEW_TASK = 'New task';\nexport const NEW_COLUMN = 'New column';","import React, { Component } from 'react'\nimport Lane from '../containers/Lane'\nimport PropTypes from 'prop-types'\nimport styles from './Lanes.module.css'\n\nclass Lanes extends Component {\n  static propTypes = {\n    lanes: PropTypes.array.isRequired,\n    onEditLane: PropTypes.func.isRequired,\n    onDeleteLane: PropTypes.func.isRequired,\n    onMoveLane: PropTypes.func.isRequired\n  }\n\n  render() {\n    const { onEditLane, onDeleteLane, onMoveLane } = this.props\n\n    const lanes = this.props.lanes.map(lane => {\n      return (\n        <Lane\n          key={lane.id}\n          lane={lane}\n          onEditLane={onEditLane}\n          onDeleteLane={onDeleteLane}\n          onMoveLane={onMoveLane}\n        />\n      )\n    })\n\n    return <div className={styles.lanes}>{lanes}</div>\n  }\n}\n\nexport default Lanes\n","import React, { Component } from 'react'\nimport Lanes from '../components/Lanes'\nimport { connect } from 'react-redux'\nimport * as LaneActions from '../actions/lanes'\nimport * as Strings from '../constants/strings'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport { DragDropContext } from 'react-dnd'\nimport PropTypes from 'prop-types'\nimport styles from './App.module.css'\n\nclass App extends Component {\n  static propTypes = {\n    lanes: PropTypes.array.isRequired,\n    onCreateLane: PropTypes.func.isRequired,\n    onDeleteLane: PropTypes.func.isRequired,\n    onEditLane: PropTypes.func.isRequired,\n    onMoveLane: PropTypes.func.isRequired\n  }\n\n  render() {\n    return (\n      <div>\n        <div className={styles.topContainer}>\n          <button className={styles.addLane} onClick={this.props.onCreateLane}>\n            + Add column\n          </button>\n        </div>\n        <Lanes\n          lanes={this.props.lanes}\n          onEditLane={this.props.onEditLane}\n          onDeleteLane={this.props.onDeleteLane}\n          onMoveLane={this.props.onMoveLane}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({ lanes: state.lanes })\n\nconst mapDispatchToProps = dispatch => ({\n  onCreateLane() {\n    dispatch(LaneActions.createLane(Strings.NEW_COLUMN))\n  },\n  onEditLane(laneId, name) {\n    const updatedLane = {\n      id: laneId\n    }\n\n    if (name) {\n      updatedLane.name = name\n      updatedLane.isEditing = false\n    } else {\n      updatedLane.isEditing = true\n    }\n\n    dispatch(LaneActions.updateLane(updatedLane))\n  },\n  onDeleteLane(laneId) {\n    dispatch(LaneActions.deleteLane(laneId))\n  },\n  onMoveLane(sourceId, targetId) {\n    dispatch(LaneActions.move('lane', sourceId, targetId))\n  }\n})\n\nexport default DragDropContext(HTML5Backend)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(App)\n)\n","import * as actionTypes from '../constants/actionTypes';\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case actionTypes.CREATE_NOTE:\n      return [...state, action.payload];\n    case actionTypes.UPDATE_NOTE:\n      return state.map(note => {\n        if (action.payload.id === note.id) {\n          return {...note, ...action.payload};\n        }\n\n        return note;\n      });\n    case actionTypes.DELETE_NOTE:\n      return state.filter(note => note.id !== action.id);\n\n    default:\n      return state;\n  }\n};\n","import * as actionTypes from '../constants/actionTypes';\nimport update from 'immutability-helper';\nimport uuid from 'uuid';\n\nconst defaultState = [\n  {\n    id: uuid.v4(),\n    name: 'Todo',\n    notes: []\n  },\n  {\n    id: uuid.v4(),\n    name: 'In progress',\n    notes: []\n  },\n  {\n    id: uuid.v4(),\n    name: 'Complete',\n    notes: []\n  }\n];\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case actionTypes.CREATE_LANE:\n      return [...state, action.payload];\n    case actionTypes.UPDATE_LANE:\n      return state.map(lane => {\n        if (lane.id === action.payload.id) {\n          return { ...lane, ...action.payload };\n        }\n        return lane;\n      });\n    case actionTypes.DELETE_LANE:\n      return state.filter(lane => lane.id !== action.payload.id);\n    case actionTypes.ATTACH_TO_LANE: {\n      const { laneId, noteId } = action.payload;\n\n      return state.map(lane => {\n        const noteIdx = lane.notes.indexOf(noteId);\n\n        if (noteIdx >= 0) {\n          return {\n            ...lane,\n            notes: lane.notes.filter(id => id !== noteId)\n          };\n        }\n\n        if (lane.id === laneId) {\n          return {\n            ...lane,\n            notes: [...lane.notes, noteId]\n          };\n        }\n\n        return lane;\n      });\n    }\n    case actionTypes.DETACH_FROM_LANE: {\n      const { laneId, noteId } = action.payload;\n\n      return state.map(lane => {\n        if (lane.id === laneId) {\n          return {\n            ...lane,\n            notes: lane.notes.filter(id => id !== noteId)\n          };\n        }\n        return lane;\n      });\n    }\n\n    case actionTypes.MOVE_NOTE: {\n      const { sourceId, targetId } = action.payload;\n\n      const sourceLane = state.filter(lane => ~lane.notes.indexOf(sourceId))[0];\n      const targetLane = state.filter(lane => ~lane.notes.indexOf(targetId))[0];\n\n      const sourceNoteIndex = sourceLane.notes.indexOf(sourceId);\n      const targetNoteIndex = targetLane.notes.indexOf(targetId);\n\n      if (sourceLane.id === targetLane.id) {\n        return state.map(lane => {\n          if (lane.id === sourceLane.id) {\n            return {\n              ...lane,\n              notes: update(sourceLane.notes, {\n                $splice: [\n                  [sourceNoteIndex, 1],\n                  [targetNoteIndex, 0, sourceId]\n                ]\n              })\n            };\n          }\n\n          return lane;\n        });\n      }\n\n      return state.map(lane => {\n        if (lane.id === sourceLane.id) {\n          return {\n            ...lane,\n            notes: update(lane.notes, {\n              $splice: [[sourceNoteIndex, 1]]\n            })\n          };\n        }\n\n        if (lane.id === targetLane.id) {\n          return {\n            ...lane,\n            notes: update(lane.notes, {\n              $splice: [[targetNoteIndex, 0, sourceId]]\n            })\n          };\n        }\n\n        return lane;\n      });\n    }\n\n    case actionTypes.MOVE_LANE: {\n      const { sourceId, targetId } = action.payload;\n      const sourceLane = state.find(lane => lane.id === sourceId);\n      const sourceLaneIndex = state.findIndex(lane => lane.id === sourceId);\n      const targetLaneIndex = state.findIndex(lane => lane.id === targetId);\n\n      return update(state, {\n        $splice: [\n          [sourceLaneIndex, 1],\n          [targetLaneIndex, 0, sourceLane],\n        ],\n      });\n    }\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport notes from './notes';\nimport lanes from './lanes';\n\nexport default combineReducers({ notes, lanes });\n","import { createStore } from 'redux';\nimport rootReducer from '../reducers/index';\n\nexport default (initialState = {}) => {\n  return createStore(rootReducer, initialState);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './containers/App';\nimport configStore from './store/configStore';\nimport localforage from 'localforage';\nimport throttle from 'lodash/throttle';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nconst localStore = localforage.createInstance({\n  name: 'kanban'\n});\n\nlocalStore.getItem('state')\n          .then(val => val = val || undefined)\n          .then(val => configStore(val), err => {\n            console.log(err);\n            return configStore(null);\n          })\n          .then(store => {\n            ReactDOM.render(\n                <Provider store={store}>\n                  <App />\n                </Provider>,\n                document.getElementById('root'));\n            store.subscribe(throttle(() => {\n              localStore.setItem('state', store.getState());\n            }, 1000));\n          });\n\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lane\":\"Lane_lane__3iW1Z\",\"laneHeader\":\"Lane_laneHeader__wp2wv\",\"deleteLane\":\"Lane_deleteLane__82Ej9\",\"addNote\":\"Lane_addNote__lMOYg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"note\":\"Note_note__3AiGQ\",\"noteContainer\":\"Note_noteContainer__2vzE5\",\"deleteNote\":\"Note_deleteNote__6TGyh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Editable_input__IkdHJ\",\"valueContainer\":\"Editable_valueContainer__3TlnO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topContainer\":\"App_topContainer__2bdJI\",\"addLane\":\"App_addLane__2c1oU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notesList\":\"Notes_notesList__24GiB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lanes\":\"Lanes_lanes__q2bc0\"};"],"sourceRoot":""}